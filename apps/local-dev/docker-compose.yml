services:
  db:
    image: postgres:18-alpine
    container_name: db
    ports:
      - "5555:5432"
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
    networks: [backend]
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d app || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5

  cache:
    image: valkey/valkey:latest
    container_name: valkey
    networks: [backend]
    volumes:
      - valkey-data:/data
    command:
      [
        "valkey-server",
        "--save", "",
        "--appendonly", "no",
        "--maxmemory", "8gb",
        "--maxmemory-policy", "allkeys-lru",
      ]
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  api:
    build:
      context: ../prototype
      dockerfile: Dockerfile
    image: faster-fapi
    container_name: api
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://app:app@db:5432/app
      VALKEY_HOST: cache
      VALKEY_PORT: 6379
      SEED_DATA_DIR: /usr/src/app/output
      DRIZZLE_CONFIG_PATH: /usr/src/app/drizzle.config.ts
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    networks: [backend]

networks:
  frontend:
  backend:

volumes:
  postgres-data:
  valkey-data:
